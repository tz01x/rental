{"version":3,"sources":["components/SimpleSelect.js","components/RangeSlider.js","components/MultipleSelect.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","outlineColor","boxShadow","selectEmpty","marginTop","filled","backgroundColor","SimpleSelect","props","classes","useEffect","console","log","FormControl","variant","className","InputLabel","id","style","fontSize","label","Select","labelId","value","curr_value","onChange","handelChangeFdata","name","MenuItem","op","map","v","idx","val","inlineTxt","root","maxWidth","borderTopRightRadius","borderTopLeftRadius","height","input","width","rlables","paddingLeft","paddingTop","color","RangeSlider","React","useState","values","setValue","handleInputChange","event","inputname","tempnum","test","target","Number","toString","rname","Typography","display","justifyContent","position","left","top","Grid","container","alignItems","item","Input","e","colorPrimary","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MultipleSelect","multiple","selectedFeature","renderValue","selected","join","data","Checkbox","checked","indexOf","ListItemText","primary","createTheme","palette","main","App","api_server_url","window","location","host","protocol","city","property_type","price","bedroom","bathroom","features","fdata","setFdata","allcitys","setAllcitys","allpTypes","setAllpTypes","allfeatures","setAllfeatures","myproperty","setMyProperty","savetoStroage","sessionStorage","setItem","JSON","stringify","getformStroage","getItem","parse","stroage_is_Exit","load_fatch_Data","storage_key","url","state","setState","f","a","featch_from_api","get_raw_data","fetch_api","fetch","responce","json","hasOwnProperty","results","forEach","element","persist","key","push","fetchdata","ThemeProvider","rval","d","i","Button","onClick","burl","ele","xmlns","fill","viewBox","Container","marginBottom","textAlign","property","Fade","in","transitionDelay","xs","sm","md","src","img","timage","alt","href","slug","title","area","property_size","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2573b0c9.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { makeStyles, colors } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"118px\",\r\n    // maxWidth:\"130px\",\r\n    outlineColor: \"#000000d1\",\r\n    boxShadow: \"-1px 3px 5px -3px\"\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  filled: {\r\n    backgroundColor: \"#ffffffc9\",\r\n    \"&.Mui-focused\": {\r\n      backgroundColor: \"white\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    console.log(props);\r\n  }, []);\r\n  return (\r\n    <FormControl variant=\"filled\" className={classes.formControl}>\r\n      <InputLabel id=\"demo-simple-select-label\" style={{ fontSize: \"0.8rem\" }}>\r\n        {props.label}\r\n      </InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-label\"\r\n        id=\"demo-simple-select\"\r\n        value={props.curr_value}\r\n        onChange={props.handelChangeFdata}\r\n        name={props.name}\r\n        label={props.label}\r\n        className={classes.filled}\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>None</em>\r\n        </MenuItem>\r\n        {props.op\r\n          ? props.op.map((v, idx) => {\r\n              return (\r\n                <MenuItem key={v.val} value={v.val}>\r\n                  {v.inlineTxt}\r\n                </MenuItem>\r\n              );\r\n            })\r\n          : null}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport PropTypes from \"prop-types\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { yellow } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: \"253px\",\r\n    maxWidth: \"253px\",\r\n    // height:\"70px\",\r\n    margin: theme.spacing(1),\r\n    borderTopRightRadius: 3,\r\n    borderTopLeftRadius: 3,\r\n\r\n    // position:\"relative\",\r\n    // left:\"-100px\",\r\n    // top:\"8px\",\r\n    backgroundColor: \"#ffffffc9\",\r\n    boxShadow: \"-1px 3px 5px -3px\"\r\n\r\n    //   display:flex,\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3)\r\n  },\r\n  input: {\r\n    width: 60,\r\n    height: \"1.00em\"\r\n  },\r\n  rlables: {\r\n    fontSize: \"0.8rem\",\r\n    paddingLeft: \"4%\",\r\n    paddingTop: \"1.5%\",\r\n    color: \"#757575\"\r\n    // top: \"-25px\",\r\n    // left:\"80px\"\r\n  }\r\n}));\r\nfunction ValueLabelComponent(props) {\r\n  const { children, open, value } = props;\r\n\r\n  return (\r\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nValueLabelComponent.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.number.isRequired\r\n};\r\n\r\nexport default function RangeSlider(props) {\r\n  const classes = useStyles();\r\n  const [values, setValue] = React.useState([\"5000\", \"100000\"]);\r\n\r\n  // const handleChange = (event, newValue) => {\r\n  //     setValue(newValue);\r\n  //     event.target['name'] = props.rname;\r\n  //     event.target['value'] = props.newValue;\r\n  //     props.handelChangeFdata(event);\r\n  // };\r\n  const handleInputChange = (event, inputname) => {\r\n    //setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n\r\n    let tempnum = 0;\r\n    try {\r\n      if (!/[\\d]*/.test(event.target.value)) {\r\n        //return true if the value has any alpha char\r\n        return;\r\n      }\r\n      tempnum = Number(event.target.value);\r\n    } catch {\r\n      return;\r\n    }\r\n    // console.log(tempnum);\r\n    // console.log(inputname);\r\n    if (tempnum < 0) {\r\n      // console.log(\"to small\");\r\n      return;\r\n    }\r\n\r\n    if (tempnum > 1e8) {\r\n      // console.log(\"to big\");\r\n\r\n      return;\r\n    }\r\n\r\n    if (inputname == \"maxval\") {\r\n      // console.log(\"change max val\");\r\n      setValue([values[0], tempnum.toString()]);\r\n\r\n      event.target[\"name\"] = props.rname;\r\n      event.target[\"value\"] = [Number(values[0]), tempnum];\r\n      props.handelChangeFdata(event);\r\n    } else if (inputname == \"minval\") {\r\n      setValue([tempnum.toString(), values[1]]);\r\n      event.target[\"name\"] = props.rname;\r\n      event.target[\"value\"] = [tempnum, Number(values[1])];\r\n      props.handelChangeFdata(event);\r\n    }\r\n  };\r\n  // const handleBlur = () => {\r\n  //     if (value[0] < 0) {\r\n  //         setValue([0,value[1]]);\r\n  //     }\r\n  //     if (value[1] <0) {\r\n  //         setValue([value[0],0]);\r\n  //     }\r\n  // };\r\n  useEffect(() => {});\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.rlables} id=\"range-slider\">\r\n        Price (<strong>BDT</strong>)\r\n      </Typography>\r\n      {/*\r\n      <Slider\r\n      ValueLabelComponent={ValueLabelComponent}\r\n        value={value}\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n        setp={1000}\r\n        min={0}\r\n        max={50000}\r\n      /> */}\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          // alignItems: \"baseline\",\r\n          justifyContent: \"space-around\",\r\n\r\n          // backgroundColor: yellow,\r\n          position: \"relative\",\r\n          // top:\"-28px\",\r\n          left: \"14px\",\r\n          top: \"7px\"\r\n        }}\r\n      >\r\n        <Grid container spacing={1} alignItems=\"baseline\">\r\n          <Grid item>\r\n            <p style={{ fontSize: 12 }}>Min</p>\r\n          </Grid>\r\n          <Grid item>\r\n            <Input\r\n              className={classes.input}\r\n              value={values[0]}\r\n              name=\"minval\"\r\n              margin=\"dense\"\r\n              onChange={(e) => handleInputChange(e, \"minval\")}\r\n              // onBlur={handleBlur}\r\n\r\n              // inputProps={{\r\n              //     step: 10,\r\n\r\n              //     type: 'number',\r\n              //     'aria-labelledby': 'input-slider',\r\n              // }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* <p style={{ fontSize: \"26\" }}>-</p> */}\r\n        <Grid container spacing={1} alignItems=\"baseline\">\r\n          <Grid item>\r\n            <p style={{ fontSize: 12 }}>Max</p>\r\n          </Grid>\r\n          <Grid item>\r\n            <Input\r\n              className={classes.input}\r\n              value={values[1]}\r\n              name=\"maxval\"\r\n              margin=\"dense\"\r\n              onChange={(e) => handleInputChange(e, \"maxval\")}\r\n              // onBlur={handleBlur}\r\n              // inputProps={{\r\n              //     step: 10,\r\n              //     type: 'number',\r\n              //     'aria-labelledby': 'input-slider',\r\n              // }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    borderTopRightRadius: 3,\r\n    borderTopLeftRadius: 3,\r\n    margin: theme.spacing(1),\r\n    boxShadow: \"-1px 3px 5px -3px\",\r\n    // minWidth: 120,\r\n    minWidth: \"150px\",\r\n    // maxWidth: \"250px\",\r\n    backgroundColor: \"#ffffffc9\",\r\n    // marginTop:\"25px\",\r\n    \"& .MuiSelect-root\": {\r\n      margin: \"4px\"\r\n    },\r\n    \"&.MuiInputBase-root.Mui-focused\": {\r\n      backgroundColor: \"white\"\r\n    }\r\n  },\r\n  colorPrimary: {\r\n    color: \"#ea4e2f\"\r\n  }\r\n}));\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium\r\n  };\r\n}\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nexport default function MultipleSelect(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event) => {\r\n    event.target[\"name\"] = props.name;\r\n\r\n    props.handelChangeFdata(event);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-mutiple-name-label\">Name</InputLabel>\r\n        <Select\r\n          labelId=\"demo-mutiple-name-label\"\r\n          id=\"demo-mutiple-name\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          \r\n         \r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name} >\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl> */}\r\n\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel\r\n          style={{ left: \"12px\", fontSize: \"0.8rem\" }}\r\n          id=\"a-mutiple-checkbox-label\"\r\n        >\r\n          {props.label ? props.label : null}\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"a-mutiple-checkbox-label\"\r\n          id=\"a-mutiple-checkbox\"\r\n          multiple\r\n          value={props.selectedFeature}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={(selected) => selected.join(\", \")}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {props.data.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox\r\n                className={classes.colorPrimary}\r\n                checked={props.selectedFeature.indexOf(name) > -1}\r\n              />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { Fade } from \"@material-ui/core/\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\n\r\nimport SimpleSelect from \"./components/SimpleSelect\";\r\nimport RangeSlider from \"./components/RangeSlider\";\r\nimport MultipleSelect from \"./components/MultipleSelect.js\";\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#ea4e2f\"\r\n    }\r\n  }\r\n});\r\nfunction App() {\r\n  const ak = \"\";\r\n  const api_server_url =\r\n    window.location.host == \"localhost:3000\"\r\n      ? \"http://127.0.0.1:8000/\"\r\n      : window.location.protocol + \"//\" + window.location.host + \"/\";\r\n\r\n  console.log(api_server_url);\r\n  const [fdata, setFdata] = useState({\r\n    city: \"\",\r\n    property_type: \"\",\r\n    price: [5000, 100000],\r\n    bedroom: \"\",\r\n    bathroom: \"\",\r\n    features: []\r\n  });\r\n  /**datatype:\r\n   * [\r\n   * {  val:option.val,\r\n   *    inlinetxt:option.inlineTxt\r\n   * }\r\n   * ]**/\r\n  const [allcitys, setAllcitys] = useState([]);\r\n  const [allpTypes, setAllpTypes] = useState([]);\r\n  const [allfeatures, setAllfeatures] = useState([]);\r\n  const [myproperty, setMyProperty] = useState([]);\r\n\r\n  function savetoStroage(name, data) {\r\n    sessionStorage.setItem(name, JSON.stringify(data));\r\n  }\r\n  function getformStroage(name) {\r\n    return sessionStorage.getItem(name)\r\n      ? JSON.parse(sessionStorage.getItem(name))\r\n      : null;\r\n  }\r\n  function stroage_is_Exit(name) {\r\n    return sessionStorage.getItem(name) ? true : false;\r\n  }\r\n  async function load_fatch_Data(\r\n    storage_key,\r\n    url,\r\n    state,\r\n    setState,\r\n    f,\r\n    featch_from_api = false,\r\n    get_raw_data = false\r\n  ) {\r\n    ///state is what you want to save affter featching all iterating over all the data\r\n    ///f is a callback funcitn is for each responce data ..\r\n    let fetch_api = false;\r\n    if (stroage_is_Exit(storage_key) && !featch_from_api) {\r\n      setState(getformStroage(storage_key));\r\n    } else {\r\n      fetch_api = true;\r\n    }\r\n    if (featch_from_api || fetch_api) {\r\n      const responce = await fetch(api_server_url + url);\r\n      let data = await responce.json();\r\n      // console.log(data);\r\n      if (get_raw_data) {\r\n        f(data);\r\n      } else {\r\n        if (data.hasOwnProperty(\"results\")) {\r\n          data = data.results;\r\n        }\r\n        data.forEach((element) => {\r\n          // element.name\r\n\r\n          //  console.log([...allcitys]);\r\n          // state.push({ val: element.name, inlineTxt: element.name });\r\n\r\n          // setState([...state]);\r\n\r\n          f(element);\r\n        });\r\n        savetoStroage(storage_key, state);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // sessionStorage.clear();\r\n\r\n    async function fetchdata() {\r\n      await load_fatch_Data(\r\n        \"citys\",\r\n        \"api/city/\",\r\n        allcitys,\r\n        setAllcitys,\r\n        (element) => {\r\n          allcitys.push({ val: element.name, inlineTxt: element.name });\r\n          setAllcitys([...allcitys]);\r\n        }\r\n      );\r\n      await load_fatch_Data(\r\n        \"ptyps\",\r\n        \"api/property/types/list/\",\r\n        allpTypes,\r\n        setAllpTypes,\r\n        (element) => {\r\n          allpTypes.push({ val: element.name, inlineTxt: element.name });\r\n          setAllpTypes([...allpTypes]);\r\n        }\r\n      );\r\n\r\n      await load_fatch_Data(\r\n        \"features\",\r\n        \"api/property/features/list/\",\r\n        allfeatures,\r\n        setAllfeatures,\r\n        (element) => {\r\n          allfeatures.push(element.name);\r\n          setAllfeatures([...allfeatures]);\r\n        }\r\n      );\r\n\r\n      await load_fatch_Data(\r\n        \"propertylist\",\r\n        \"api/property/list/\",\r\n        myproperty,\r\n        setMyProperty,\r\n        (element) => {\r\n          myproperty.push(element);\r\n          //console.log(element);\r\n          setMyProperty([...myproperty]);\r\n        }\r\n      );\r\n    }\r\n    fetchdata();\r\n  }, []);\r\n\r\n  function handelChangeFdata(event) {\r\n    // event.terget.name\r\n    //console.log(event.target.name);\r\n    //setFdata({ ...fdata, [event.target.name]: event.target.value });\r\n    event.persist();\r\n    setFdata((state) => {\r\n      // console.log(event.target.name);\r\n      let data = { ...state, [event.target.name]: event.target.value };\r\n\r\n      for (const key in data) {\r\n        fdata[key] = data[key];\r\n      }\r\n      //handelFiltering(null);\r\n      return data;\r\n    });\r\n  }\r\n\r\n  function handelFiltering(event) {\r\n    //alert(\"filter\");\r\n    let burl = `api/property/list/?`;\r\n    for (const key in fdata) {\r\n      burl += `${key}=${fdata[key]}&`;\r\n    }\r\n    //console.log(burl);\r\n    load_fatch_Data(\r\n      \"propertylist\",\r\n      burl,\r\n      myproperty,\r\n      setMyProperty,\r\n      (element) => {\r\n        //  console.log(element);\r\n\r\n        let d = [];\r\n        if (element.hasOwnProperty(\"results\")) {\r\n          element.results.forEach((ele) => {\r\n            d.push(ele);\r\n          });\r\n          setMyProperty([...d]);\r\n        }\r\n      },\r\n      true,\r\n      true\r\n    );\r\n  }\r\n  const [formats, setFormats] = React.useState(() => []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"search_bar cover-img\">\r\n        <div className=\"cover-title\">টু-লেট্ এখন হাতের মুঠোয়</div>\r\n\r\n        <div className=\"ifields\">\r\n          <ThemeProvider theme={theme}>\r\n            <SimpleSelect\r\n              key={\"8285333#\"}\r\n              name=\"city\"\r\n              label=\"Citys\"\r\n              handelChangeFdata={handelChangeFdata}\r\n              curr_value={fdata.city}\r\n              op={allcitys}\r\n            />\r\n            <SimpleSelect\r\n              key={\"828987533#\"}\r\n              name=\"property_type\"\r\n              label=\"Property type\"\r\n              handelChangeFdata={handelChangeFdata}\r\n              curr_value={fdata.property_type}\r\n              op={allpTypes}\r\n            />\r\n\r\n            <RangeSlider\r\n              rname=\"price\"\r\n              rval={fdata.price}\r\n              handelChangeFdata={handelChangeFdata}\r\n            />\r\n            <SimpleSelect\r\n              key={\"8k89jdjod7533#\"}\r\n              name=\"bedroom\"\r\n              label=\"Bed rooms\"\r\n              handelChangeFdata={handelChangeFdata}\r\n              curr_value={fdata.bedroom}\r\n              op={\r\n                [0].map(() => {\r\n                  const d = [];\r\n                  for (let i = 1; i < 5; i++) {\r\n                    d.push({ val: i, inlineTxt: i });\r\n                  }\r\n                  d.push({ val: \"5+\", inlineTxt: \"5+\" });\r\n                  return d;\r\n                })[0]\r\n              }\r\n            />\r\n            <SimpleSelect\r\n              key={\"8k898755k3#\"}\r\n              name=\"bathroom\"\r\n              label=\"Bath rooms\"\r\n              handelChangeFdata={handelChangeFdata}\r\n              curr_value={fdata.bathroom}\r\n              op={\r\n                [0].map(() => {\r\n                  const d = [];\r\n                  for (let i = 1; i < 5; i++) {\r\n                    d.push({ val: i, inlineTxt: i });\r\n                  }\r\n                  d.push({ val: \"5+\", inlineTxt: \"5+\" });\r\n                  return d;\r\n                })[0]\r\n              }\r\n            />\r\n\r\n            <MultipleSelect\r\n              name={\"features\"}\r\n              label={\"Features\"}\r\n              data={allfeatures}\r\n              handelChangeFdata={handelChangeFdata}\r\n              selectedFeature={fdata.features}\r\n            />\r\n          </ThemeProvider>\r\n        </div>\r\n        {/* <Fab  style={{background:\"white\",color:\"#ea4e2f\"}} onClick={()=>{window.location.assign(\"./property/list/\")}}>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n      <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\r\n      </svg>\r\n      </Fab> */}\r\n\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handelFiltering}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-filter-left\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M2 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5zm0-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm0-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z\" />\r\n          </svg>\r\n          Filter\r\n        </Button>\r\n      </div>\r\n      <Container className=\"propertys_list\">\r\n        <div\r\n          className=\"\"\r\n          style={{ marginBottom: \"10px\", marginTop: \"10px\", fontSize: \"25px\",textAlign:'center', }}\r\n        >\r\n          Our Featured Properties\r\n        </div>\r\n\r\n        {/* <div style={{ float: 'right',margin: '10px 0 10px 0'}}>\r\n\r\n          <ToggleButtonGroup value={formats} onChange={handleFormat} aria-label=\"text formatting\">\r\n            <ToggleButton value=\"bold\" aria-label=\"bold\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-grid-3x2\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M0 3.5A1.5 1.5 0 0 1 1.5 2h13A1.5 1.5 0 0 1 16 3.5v8a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 11.5v-8zM1.5 3a.5.5 0 0 0-.5.5V7h4V3H1.5zM5 8H1v3.5a.5.5 0 0 0 .5.5H5V8zm1 0v4h4V8H6zm4-1V3H6v4h4zm1 1v4h3.5a.5.5 0 0 0 .5-.5V8h-4zm0-1h4V3.5a.5.5 0 0 0-.5-.5H11v4z\" />\r\n              </svg>\r\n            </ToggleButton>\r\n            <ToggleButton value=\"italic\" aria-label=\"italic\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-list-ol\" viewBox=\"0 0 16 16\">\r\n                <path fill-rule=\"evenodd\" d=\"M5 11.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5z\" />\r\n                <path d=\"M1.713 11.865v-.474H2c.217 0 .363-.137.363-.317 0-.185-.158-.31-.361-.31-.223 0-.367.152-.373.31h-.59c.016-.467.373-.787.986-.787.588-.002.954.291.957.703a.595.595 0 0 1-.492.594v.033a.615.615 0 0 1 .569.631c.003.533-.502.8-1.051.8-.656 0-1-.37-1.008-.794h.582c.008.178.186.306.422.309.254 0 .424-.145.422-.35-.002-.195-.155-.348-.414-.348h-.3zm-.004-4.699h-.604v-.035c0-.408.295-.844.958-.844.583 0 .96.326.96.756 0 .389-.257.617-.476.848l-.537.572v.03h1.054V9H1.143v-.395l.957-.99c.138-.142.293-.304.293-.508 0-.18-.147-.32-.342-.32a.33.33 0 0 0-.342.338v.041zM2.564 5h-.635V2.924h-.031l-.598.42v-.567l.629-.443h.635V5z\" />\r\n              </svg>\r\n            </ToggleButton>\r\n            <ToggleButton value=\"underlined\" aria-label=\"underlined\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-caret-left-fill\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M3.86 8.753l5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z\" />\r\n              </svg>\r\n            </ToggleButton>\r\n            <ToggleButton value=\"color\" aria-label=\"color\" >\r\n            <Button>\r\n\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-caret-right-fill\" viewBox=\"0 0 16 16\">\r\n      <path d=\"M12.14 8.753l-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z\" />\r\n    </svg>\r\n    \r\n</Button>\r\n            </ToggleButton>\r\n            \r\n          </ToggleButtonGroup>\r\n        <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n          \r\n          <Button>Two</Button>\r\n          <Button>Three</Button>\r\n        </ButtonGroup>\r\n        </div> */}\r\n\r\n        <Grid container spacing={3}>\r\n          {myproperty.map((property) => {\r\n            return (\r\n              <Fade in={true} style={{ transitionDelay: \"500ms\" }}>\r\n                <Grid item xs={12} sm={6} md={3}>\r\n                  <div\r\n                    className=\"card\"\r\n                    style={{ boxShadow: \"-2px 2px 9px -3px #020202\" }}\r\n                  >\r\n                    <img\r\n                      src={`${property.img[0].timage}`}\r\n                      height=\"200\"\r\n                      className=\"card-img-top\"\r\n                      alt=\"...\"\r\n                    ></img>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"card-text\">\r\n                        <h6>\r\n                          <a\r\n                            href={\r\n                              api_server_url +\r\n                              \"property/details/\" +\r\n                              property.slug\r\n                            }\r\n                          >\r\n                            {property.title}\r\n                          </a>\r\n                        </h6>\r\n                        <p>\r\n                          <i className=\"fa fa-map-marker\"></i> {property.area},\r\n                          {property.city}\r\n                        </p>\r\n\r\n                        <small>\r\n                          <i className=\"fa fa-bed\"></i>{\" \"}\r\n                          <span id=\"bednumber\" className=\"pe-2\">\r\n                            {property.bedroom} Beds\r\n                          </span>\r\n                          <i className=\"fa fa-bath\"></i>\r\n                          <span id=\"bathnumber\" className=\"pe-2\">\r\n                            {property.bathroom} Baths\r\n                          </span>\r\n                          <i className=\"fa fa-th-large\"></i>\r\n                          <span id=\"area\" className=\"pe-2\">\r\n                            {property.property_size} sqft\r\n                          </span>\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"card-footer\"\r\n                      style={{ backgroundColor: \"#ffff\" }}\r\n                    >\r\n                      <small className=\"text-muted fw-bold\">\r\n                        BDT{\" \"}\r\n                        <span className=\"fs-5\" style={{ color: \"#ff653d\" }}>\r\n                          {property.price}\r\n                        </span>{\" \"}\r\n                        / MONTH\r\n                      </small>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n              </Fade>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}